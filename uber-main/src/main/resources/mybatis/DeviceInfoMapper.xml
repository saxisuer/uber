<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.uber.uberfamily.dao.DeviceInfoDao">


    <select id="getList" resultType="deviceInfo" parameterType="java.util.Map">
        SELECT
          t_device_info.*,
          t_city.city_name_cn,
          t_device_group.group_name
        FROM t_device_info
          LEFT JOIN t_city ON t_device_info.city_code = t_city.city_code
          LEFT JOIN t_device_group ON t_device_info.device_group_id = t_device_group.id
    </select>

    <select id="getListByAdTempId" resultType="deviceInfo" parameterType="long" statementType="CALLABLE">
        call getDeviceByAdTempId(#{VALUE })
    </select>


    <update id="update" parameterType="deviceInfo">
        UPDATE t_device_info
        <set>
            <if test="deviceUUID != null">deviceUUID = #{deviceUUID},</if>
            <if test="latitude != null">latitude = #{latitude},</if>
            <if test="longtitude != null">longtitude = #{longtitude},</if>
            <if test="state != null">state = #{state},</if>
            <if test="installationDate != null">installationDate = #{installationDate},</if>
            <if test="city != null">city = #{city},</if>
            <if test="province != null">province = #{province},</if>
            <if test="address != null">address = #{address},</if>
            <if test="cityCode != null">city_code = #{cityCode},</if>
            <if test="deviceGroupId != null">device_group_id = #{deviceGroupId},</if>
        </set>
        <where>
            id = #{id}
        </where>
    </update>

    <insert id="create" parameterType="deviceInfo" useGeneratedKeys="true" keyProperty="id">
        insert into t_device_info( province, city, address, latitude, longtitude, installationDate, state, deviceUUID,city_code,device_group_id)
        VALUES (#{province},#{city},#{address},#{latitude},#{longtitude},#{installationDate},#{state},#{deviceUUID},#{cityCode},#{deviceGroupId})
    </insert>

    <select id="getById" parameterType="long" resultType="deviceInfo">
        SELECT * from t_device_info
        <where>
            id= #{value}
        </where>
    </select>


    <delete id="delete" parameterType="long">
        delete from t_device_info where id=#{value,javaType=long}
    </delete>


    <resultMap id="statisticMap" type="java.util.HashMap">
        <result column="uuid" javaType="String" property="uuid"/>
        <result column="address" javaType="String" property="address"/>
        <result column="callCount" javaType="Long" property="callCount"/>
    </resultMap>

    <select id="statistic" parameterType="java.util.Map" resultMap="statisticMap">
        SELECT
          t1.deviceUUID as uuid,
          t1.address as address,
          ifnull(t2.count, 0) AS callCount
        FROM (
               SELECT
                 tdi.deviceUUID,
                 concat(tdi.province, tdi.city, tdi.address) AS address
               FROM t_device_info tdi) t1 LEFT JOIN (SELECT
                                                       count(deviceUUID) count,
                                                       deviceUUID
                                                     FROM t_call_log
                                                     GROUP BY deviceUUID) t2
            ON t1.deviceUUID = t2.deviceUUID
    </select>


    <select id="getListByType" parameterType="java.util.Map" resultType="deviceInfo">
        SELECT id,deviceUUID from t_device_info
        <where>
            <if test="bindType =='city'">
                city_code IN
                <foreach collection="bindIds" separator="," open="(" close=")" item="item">
                    #{item}
                </foreach>
            </if>
            <if test="bindType =='group'">
                device_group_id IN
                <foreach collection="bindIds" item="item" close=")" open="(" separator=",">
                    #{item}
                </foreach>
            </if>
            <if test="bindType =='device'">
                id IN
                <foreach collection="bindIds" item="item" close=")" open="(" separator=",">
                    #{item}
                </foreach>
            </if>
        </where>
    </select>
</mapper>